#  -*- mode: apache; -*-
#
# Apache config options to front a set of Sun update center servers (pkg.depotd)
#
# Meant to be put into /etc/httpd/conf.d
#

# Proxy modules
#
<IfModule !proxy_module>
    LoadModule proxy_module modules/mod_proxy.so
</IfModule>
<IfModule !proxy_http_module>
    LoadModule proxy_http_module modules/mod_proxy_http.so
</IfModule>

LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{X-IPkg-UUID}i\" \"%{X-IPkg-Intent}i\"" combined-pkg
CustomLog logs/access_log combined-pkg


<IfModule rewrite_module>
    RewriteEngine on
    #
    #   If you want to debug your rewrite logic, modify the following
    #   two lines.
#    RewriteLog "/var/log/httpd/rewrite.log"
#    RewriteLogLevel 6
    ##########################################################################
    #
    #                Repository URL Rewriting Section
    #
    # General Steps:
    #   1) Don't rewrite non-repository requests because we might be serving
    #      other content from this web server.
    #  
    #   2) Determine OS platform of interest based on either request URI
    #      or HTTP_USER_AGENT.
    #
    #   3) Rewrite the URL based on OS platform and repository of interest.
    #      Repository URLs take the form of: http://localhost:<port>
    #
    # General Notes:
    #
    #     [NC] means ignore case during matching.
    #
    #     [L] means exit the rewriting evaluation. i.e. ignore the rest of the
    #     RewriteCond and RewriteRule entries in this file.
    #
    #     "-" means don't do any rewriting at this stage.
    #
    #     RewriteCond statements are treated with an AND relationship unless
    #     [OR] is used.
    #
    ##########################################################################

    #
    # Step 1: Don't rewrite non-repository requests
    #

    RewriteCond %{REQUEST_URI} !^/(release|stage|qa)/ [NC]
    RewriteRule ^(.*)$ - [L]

    #
    # Step 2: Determine OS platform of interest
    #
    # Now we know that we have a URL that is referring to a repository,
    # inspect the URI and optionally, the USER_AGENT header for the
    # OS platform and set an environment variable to be used later.
    #
    # People using browsers may want to browse the content of a specific
    # repository for a specific platform.  Consequently, they may include
    # the platform in the URI.  So we can't depend solely on the OS info 
    # contained in the USER_AGENT header.
    #
    # If platform is contained in URI, that trumps the OS info in the

    # the USER_AGENT header.  Set the environment variable based on the
    # platform value matched in the header.
    #
    # The %1 represents the result of the 1st subexpression in the last
    # RewriteCond statement. If one of the platform strings match,
    # the %1 will equal it. If no match, it will be set to NULL.
    #

    RewriteCond %{REQUEST_URI} (windows|linux|mac|solaris-x86|solaris-sparc) [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:%1]

    #
    # In the following platform setting sections, first determine
    # whether the OS_PLATFORM environment variable has already
    # been set.  If it has been set, skip trying to determine
    # the platform of interest again.
    #

    # A match on "windows" anywhere in the HTTP_USER_AGENT header
    # should be sufficient.  However, older versions of the
    # IPS Python client use the other listed forms of "win*" as well as 
    # "unknown". More recent versions of the IPS Python client use only
    # "windows".

    RewriteCond %{ENV:OS_PLATFORM} ^$
    RewriteCond %{HTTP_USER_AGENT} windows|winvista|winxp|unknown [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:windows]

    #
    # Caution: Since Firefox doesn't put "linux" in the first area after
    # the "(" in the USER_AGENT header, you can't check to see if there's
    # a leading "(" in front of "linux".
    #
    RewriteCond %{ENV:OS_PLATFORM} ^$
    RewriteCond %{HTTP_USER_AGENT} linux [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:linux]

    RewriteCond %{ENV:OS_PLATFORM} ^$
    RewriteCond %{HTTP_USER_AGENT} darwin|mac [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:mac]

    RewriteCond %{ENV:OS_PLATFORM} ^$
    RewriteCond %{HTTP_USER_AGENT} sunos\ i86pc|sunos\ x86 [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:solaris-x86]

    RewriteCond %{ENV:OS_PLATFORM} ^$
    RewriteCond %{HTTP_USER_AGENT} sunos\ sun4|sunos\ sparc [NC]
    RewriteRule ^(.*)$ - [E=OS_PLATFORM:solaris-sparc]

    #
    # RewriteRule Notes:
    #   1) The $2 represents the resulting value of the second subexpression
    #      in the RewriteRule.  The first subexpression is the attempt to
    #      match on the optional presence of the platform string in the URI.
    #      The value of that subexpression will either be null or the string
    #      in parens.  In either case, at this stage, we want to throw away
    #      that value because it has no role to play in the rewritten URL.
    #
    #      The second subexpression is the remainder of the URI.  We must
    #      pass along the remainder of the URI minus the vanity portion of the
    #      URL to the repository server.  For example, the remainder may include
    #      "catalog/0/" type of URI data from the original request.
    #
    #   2) [P,L] means proxy this rewritten URL now and exit the entire
    #      rewrite section of the file.
    #
    #   3) Requests of the form /release/foo/ where "foo" might be an
    #      unsupported OS platform or an unsupported function of the IPS
    #      repository server, the repository server will return a 404, page
    #      not found.
    #

    ############################################################
    # Release URL space
    ############################################################

    # NOTE: due to a mix-up in releases, we're pointing stage
    # at the release area, and use "qa" for the staging area URL

    RewriteCond %{REQUEST_URI} ^/stage/ [NC]
    RewriteRule ^/stage/(.*) http://%{HTTP_HOST}/release/$1 [P,L]

    #
    # Linux 64 bit.  Has to be before 32-bit linux so it gets hit first
    # otherwise the plain "linux" rule applies and fire, floods, locusts...
    # woe betide!
    #
    RewriteCond %{REQUEST_URI} ^/release/linux64 [NC]
    RewriteCond %{ENV:OS_PLATFORM} linux
    RewriteRule ^/release/linux64(.*) http://localhost:10006$1 [P,L]
    ProxyPassReverse /release/linux64 http://localhost:10006

    RewriteCond %{REQUEST_URI} ^/release/(linux)? [NC]
    RewriteCond %{ENV:OS_PLATFORM} linux
    RewriteRule ^/release(/linux)?(.*) http://localhost:10001$2 [P,L]
    ProxyPassReverse /release/linux http://localhost:10001

    #
    # Windows 64 bit, also before "vanilla" windows for same reason as linux,
    # only with more locusts.
    #
    RewriteCond %{REQUEST_URI} ^/release/windows64 [NC]
    RewriteCond %{ENV:OS_PLATFORM} windows
    RewriteRule ^/release/windows64(.*) http://localhost:10007$1 [P,L]
    ProxyPassReverse /release/windows64 http://localhost:10007

    RewriteCond %{REQUEST_URI} ^/release/(windows)? [NC]
    RewriteCond %{ENV:OS_PLATFORM} windows
    RewriteRule ^/release(/windows)?(.*) http://localhost:10002$2 [P,L]
    ProxyPassReverse /release/windows http://localhost:10002

    #
    # Mac.  For that happy day when Steve smiles upon us all.
    #     
    RewriteCond %{REQUEST_URI} ^/release/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} mac
    RewriteRule ^/release(/mac)?(.*) http://localhost:10003$2 [P,L]
    ProxyPassReverse /release/mac http://localhost:10003

    #
    # Ditto here for Larry "I own that!" Ellison.
    #
    RewriteCond %{REQUEST_URI} ^/release/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} solaris-x86
    RewriteRule ^/release(/solaris-x86)?(.*) http://localhost:10004$2 [P,L]
    ProxyPassReverse /release/solaris-x86 http://localhost:10004

    RewriteCond %{REQUEST_URI} ^/release/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} solaris-sparc
    RewriteRule ^/release(/solaris-sparc)?(.*) http://localhost:10005$2 [P,L]
    ProxyPassReverse /release/solaris-sparc http://localhost:10005

    ############################################################
    # Staging URL space
    ############################################################


    #
    # Linux 64 bit.  Has to be before 32-bit linux so it gets hit first
    #
    RewriteCond %{REQUEST_URI} ^/qa/linux64 [NC]
    RewriteCond %{ENV:OS_PLATFORM} linux
    RewriteRule ^/qa/linux64(.*) http://localhost:10106$1 [P,L]
    ProxyPassReverse /qa/linux64 http://localhost:10106

    RewriteCond %{REQUEST_URI} ^/qa/(linux)? [NC]
    RewriteCond %{ENV:OS_PLATFORM} linux
    RewriteRule ^/qa(/linux)?(.*) http://localhost:10101$2 [P,L]
    ProxyPassReverse /qa/linux http://localhost:10101

    #
    # Windows 64 bit, also before "vanilla" windows for same reason as linux.
    #
    RewriteCond %{REQUEST_URI} ^/qa/windows64 [NC]
    RewriteCond %{ENV:OS_PLATFORM} windows
    RewriteRule ^/qa/windows64(.*) http://localhost:10107$1 [P,L]
    ProxyPassReverse /qa/windows64 http://localhost:10107

    RewriteCond %{REQUEST_URI} ^/qa/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} windows
    RewriteRule ^/qa(/windows)?(.*) http://localhost:10102$2 [P,L]
    ProxyPassReverse /qa/windows http://localhost:10102

    #
    # Mac.
    #     
    RewriteCond %{REQUEST_URI} ^/qa/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} mac
    RewriteRule ^/qa(/mac)?(.*) http://localhost:10103$2 [P,L]
    ProxyPassReverse /qa/mac http://localhost:10103

    #
    # Solaris
    #
    RewriteCond %{REQUEST_URI} ^/qa/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} solaris-x86
    RewriteRule ^/qa(/solaris-x86)?(.*) http://localhost:10104$2 [P,L]
    ProxyPassReverse /qa/solaris-x86 http://localhost:10104

    RewriteCond %{REQUEST_URI} ^/qa/ [NC]
    RewriteCond %{ENV:OS_PLATFORM} solaris-sparc
    RewriteRule ^/qa(/solaris-sparc)?(.*) http://localhost:10105$2 [P,L]
    ProxyPassReverse /qa/solaris-sparc http://localhost:10105


</IfModule>

<IfModule proxy_http_module>
    ProxyRequests off
</IfModule>

